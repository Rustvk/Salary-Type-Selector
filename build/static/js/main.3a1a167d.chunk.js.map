{"version":3,"sources":["components/Form/style.module.scss","components/Form/index.tsx","components/Icon/index.tsx","components/Hint/index.tsx","components/Switcher/index.tsx","containers/Form/index.tsx","store/actions/salary.tsx","store/actions/actionTypes.tsx","store/reducers/salary.tsx","store/reducers/rootReducer.tsx","index.tsx","components/Switcher/style.module.scss","components/Hint/style.module.scss","components/Icon/style.module.scss","containers/Form/style.module.scss"],"names":["module","exports","currentType","props","classNames","classes","icon","isActive","push","closeIcon","className","join","onMouseOver","onHover","onClick","onClose","value","hintContainer","Icon","isShown","onHintIconClose","onHintIconHovered","hint","switchContainer","activeLabel","switch","Field","name","component","type","slider","handAmount","taxAmount","monthAmount","types","salary","list","salaryValue","isSwitcherActive","Math","round","form","map","item","selectedType","key","itemContainer","radioButton","checked","title","Hint","typeHint","hoveredHintType","onHintChanged","bind","showTaxHint","Switcher","showInput","salaryInput","inputHint","taxHint","taxHintItem","MyForm","container","sumTitle","Form","this","Component","newForm","reduxForm","connect","state","selector","formValueSelector","dispatch","initialState","selected","hideTax","hintShowed","inputValue","combineReducers","action","formReducer","store","createStore","rootReducer","composeWithDevTools","app","ReactDOM","render","document","getElementById"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,oBAAoB,cAAgB,6BAA6B,YAAc,2BAA2B,YAAc,2BAA2B,QAAU,uBAAuB,YAAc,6B,2ICMvNC,E,4DCJW,WAACC,GAKZ,IAAMC,EAAa,CACfC,IAAQC,MAKZ,OAHIH,EAAMI,UACNH,EAAWI,KAAKH,IAAQI,WAGxB,yBACIC,UAAWN,EAAWO,KAAK,KAC3BC,YAAa,kBAAMT,EAAMU,WACzBC,QAAS,kBAAMX,EAAMI,SAAWJ,EAAMY,UAAY,SCd/C,WAACZ,GAMZ,OACI,6BAEQA,EAAMa,MACF,yBAAKN,UAAWL,IAAQY,eACpB,kBAACC,EAAD,CACIX,SAAUJ,EAAMgB,QAChBJ,QAASZ,EAAMiB,gBACfP,QAASV,EAAMkB,oBAGflB,EAAMgB,QACF,yBAAKT,UAAWL,IAAQiB,MAEhBnB,EAAMa,OAGd,IAGZ,K,iBC1BL,cAAuC,IAArCT,EAAoC,EAApCA,SACb,OACI,2BAAOG,UAAWL,IAAQkB,iBACtB,0BAAMb,UAAWH,EAAW,GAAKF,IAAQmB,aAAzC,8EACA,yBAAKd,UAAWL,IAAQoB,QACpB,kBAACC,EAAA,EAAD,CACIC,KAAK,cACLC,UAAU,QACVC,KAAK,aAET,0BAAMnB,UAAWL,IAAQyB,UAE7B,0BAAMpB,UAAWH,EAAWF,IAAQmB,YAAc,IAAlD,iDHPG,WAACrB,GACZ,IACI4B,EACAC,EACAC,EAHEC,EAAQ/B,EAAMgC,OAAOC,KAe3B,OAXIjC,EAAMkC,cACFlC,EAAMmC,kBACNP,EAAaQ,KAAKC,OAAOrC,EAAMkC,aAC/BL,EAAYO,KAAKC,MAAOT,EAAa,IAAO,IAC5CE,EAAcM,KAAKC,MAAMT,EAAaC,KAEtCC,EAAcM,KAAKC,OAAOrC,EAAMkC,aAChCL,EAAYO,KAAKC,MAAOP,EAAc,IAAO,IAC7CF,EAAaQ,KAAKC,MAAMP,EAAcD,KAI1C,0BAAMtB,UAAWL,IAAQoC,MACrB,6BAEQP,EAAMQ,KAAI,SAACC,GAIP,OAHIxC,EAAMyC,eAAiBD,EAAKE,MAC5B3C,EAAcyC,GAGd,yBAAKE,IAAKF,EAAKE,IAAKnC,UAAWL,IAAQyC,eACnC,+BACI,kBAACpB,EAAA,EAAD,CACIhB,UAAWL,IAAQ0C,YACnBpB,KAAK,aACLC,UAAU,QACVC,KAAK,QACLb,MAAO2B,EAAKE,IACZG,QAAS7C,EAAMyC,eAAiBD,EAAKE,MAEzC,gCAASF,EAAKM,QAElB,kBAACC,EAAD,CACIlC,MAAO2B,EAAKQ,SACZhC,QAAShB,EAAMgC,OAAOiB,kBAAoBT,EAAKE,IAC/CxB,kBAAmBlB,EAAMkD,cAAcC,KAAK,KAAMX,EAAKE,KACvDzB,gBAAiBjB,EAAMkD,qBAO/C,6BAEQnD,EAAYqD,YAAc,kBAACC,EAAD,CAAUjD,SAAUJ,EAAMmC,mBAAsB,GAG1EpC,EAAYuD,UACR,6BACI,kBAAC/B,EAAA,EAAD,CACIhB,UAAWL,IAAQqD,YACnB/B,KAAK,cACLX,MAAOd,EAAY2C,IACnBjB,UAAU,QACVC,KAAK,WAET,gCAEQ3B,EAAYyD,UACR,wCAASzD,EAAYyD,WACrB,WAIhB,GAGJzD,EAAYqD,aAAepD,EAAMkC,YAC7B,yBAAK3B,UAAWL,IAAQuD,SACpB,yBAAKlD,UAAWL,IAAQwD,aAAa,gCAAS9B,GAA9C,wLACA,yBAAKrB,UAAWL,IAAQwD,aAAa,gCAAS7B,GAA9C,oFACA,yBAAKtB,UAAWL,IAAQwD,aAAa,gCAAS5B,GAA9C,qHAEJ,M,yBIhFlB6B,E,uKAEE,OACI,yBAAKpD,UAAWL,IAAQ0D,WACpB,yBAAKrD,UAAWL,IAAQ2D,UAAxB,kCACA,kBAACC,EAASC,KAAK/D,Y,GALVgE,aA2BfC,EAAUC,YAAyB,CACrC5B,KAAM,UADM4B,CAEbP,GAEYQ,eApBS,SAACC,GACrB,IAAMC,EAAWC,YAAkB,UACnC,MAAO,CACHtC,OAAQoC,EAAMpC,OACdE,aAAemC,EAASD,EAAO,gBAAkB,EACjDjC,iBAAkBkC,EAASD,EAAO,eAClC3B,aAAc4B,EAASD,EAAO,eAAiB,YAI5B,SAACG,GACxB,MAAO,CACHrB,cAAe,SAACxB,GAAD,OAAmB6C,EC5B/B,CACH7C,KCJ2B,cDK3BuB,gBD0BsDvB,QAQ/CyC,CAA6CF,G,uBGRtDO,EAAe,CACpBvC,KA7Ba,CACb,CACCS,IAAK,QACLI,MAAO,6EACPQ,WAAW,EACXF,aAAa,EACbqB,UAAU,GAEX,CACC/B,IAAK,OACLI,MAAO,2BACP4B,SAAS,EACT1B,SAAU,yVAEX,CACCN,IAAK,MACLI,MAAO,6EACPQ,WAAW,EACXE,UAAW,mCAEZ,CACCd,IAAK,OACLI,MAAO,uEACPQ,WAAW,EACXE,UAAW,8BAMZmB,YAAY,EACZC,WAAY,I,aC9BEC,4BAAgB,CAC9B7C,ODgCc,WAOC,IANfoC,EAMc,uDANRI,EACNM,EAKc,uCACd,OAAQA,EAAOpD,MACd,ID9CiC,cC+ChC,OAAO,eACH0C,EADJ,CAECnB,gBAAiB6B,EAAO7B,kBAE1B,QACC,OAAOmB,IC9CT9B,KAAMyC,MCGDC,EAAQC,sBACVC,EACAC,iCAGEC,EACF,kBAAC,IAAD,CAAUJ,MAAOA,GACb,kBAAC,EAAD,OAIRK,IAASC,OAAOF,EAAKG,SAASC,eAAe,U,mBCnB7C3F,EAAOC,QAAU,CAAC,gBAAkB,+BAA+B,YAAc,2BAA2B,OAAS,sBAAsB,OAAS,wB,mBCApJD,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,KAAO,sB,mBCAtED,EAAOC,QAAU,CAAC,KAAO,oBAAoB,UAAY,2B,mBCAzDD,EAAOC,QAAU,CAAC,UAAY,yBAAyB,SAAW,0B","file":"static/js/main.3a1a167d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"style_form__1F-e-\",\"itemContainer\":\"style_itemContainer__1X3co\",\"radioButton\":\"style_radioButton__1Y8fc\",\"salaryInput\":\"style_salaryInput__1UXFr\",\"taxHint\":\"style_taxHint__2przR\",\"taxHintItem\":\"style_taxHintItem__1ff25\"};","import React from 'react';\r\nimport { Field } from 'redux-form';\r\nimport classes from './style.module.scss';\r\nimport {salaryType, formProps} from '../../interfaces/salary';\r\nimport Hint from '../../components/Hint';\r\nimport Switcher from '../../components/Switcher';\r\n\r\nlet currentType: salaryType;\r\n\r\nexport default (props: formProps) => {\r\n    const types = props.salary.list;\r\n    let handAmount;\r\n    let taxAmount;\r\n    let monthAmount;\r\n    if (props.salaryValue) {\r\n        if (props.isSwitcherActive) {\r\n            handAmount = Math.round(+props.salaryValue);\r\n            taxAmount = Math.round((handAmount / 100) * 13);\r\n            monthAmount = Math.round(handAmount + taxAmount);\r\n        } else {\r\n            monthAmount = Math.round(+props.salaryValue);\r\n            taxAmount = Math.round((monthAmount / 100) * 13);\r\n            handAmount = Math.round(monthAmount - taxAmount);\r\n        }\r\n    }\r\n    return (\r\n        <form className={classes.form}>\r\n            <div>\r\n                {\r\n                    types.map((item) => {\r\n                        if (props.selectedType === item.key) {\r\n                            currentType = item;\r\n                        }\r\n                        return (\r\n                            <div key={item.key} className={classes.itemContainer}>\r\n                                <label>\r\n                                    <Field\r\n                                        className={classes.radioButton}\r\n                                        name=\"salaryList\"\r\n                                        component=\"input\"\r\n                                        type=\"radio\"\r\n                                        value={item.key}\r\n                                        checked={props.selectedType === item.key}\r\n                                    />\r\n                                    <strong>{item.title}</strong>\r\n                                </label>\r\n                                <Hint\r\n                                    value={item.typeHint}\r\n                                    isShown={props.salary.hoveredHintType === item.key}\r\n                                    onHintIconHovered={props.onHintChanged.bind(null, item.key)}\r\n                                    onHintIconClose={props.onHintChanged}\r\n                                />\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n            <div>\r\n                {\r\n                    currentType.showTaxHint ? <Switcher isActive={props.isSwitcherActive}/> : ''\r\n                }\r\n                {\r\n                    currentType.showInput ?\r\n                        <div>\r\n                            <Field\r\n                                className={classes.salaryInput}\r\n                                name=\"salaryValue\"\r\n                                value={currentType.key}\r\n                                component=\"input\"\r\n                                type=\"number\"\r\n                            />\r\n                            <strong>\r\n                                {\r\n                                    currentType.inputHint ?\r\n                                        <span>₽ {currentType.inputHint}</span> :\r\n                                        '₽'\r\n                                }\r\n                            </strong>\r\n                        </div> :\r\n                        ''\r\n                }\r\n                {\r\n                    currentType.showTaxHint && props.salaryValue ?\r\n                        <div className={classes.taxHint}>\r\n                            <div className={classes.taxHintItem}><strong>{handAmount}</strong> ₽ сотрудник будет получать на руки</div>\r\n                            <div className={classes.taxHintItem}><strong>{taxAmount}</strong> НДФЛ, 13% от оклада</div>\r\n                            <div className={classes.taxHintItem}><strong>{monthAmount}</strong> за сотрудника в месяц</div>\r\n                        </div> :\r\n                        ''\r\n                }\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport classes from './style.module.scss';\r\n\r\nexport default (props: {\r\n    isActive: boolean;\r\n    onHover: Function;\r\n    onClose: Function;\r\n}) => {\r\n    const classNames = [\r\n        classes.icon\r\n    ];\r\n    if (props.isActive) {\r\n        classNames.push(classes.closeIcon);\r\n    }\r\n    return (\r\n        <div\r\n            className={classNames.join(' ')}\r\n            onMouseOver={() => props.onHover()}\r\n            onClick={() => props.isActive ? props.onClose() : null}>\r\n        </div>\r\n    );\r\n};","import classes from './style.module.scss';\r\nimport React from 'react';\r\nimport Icon from '../Icon';\r\n\r\nexport default (props: {\r\n    isShown: boolean;\r\n    value?: string;\r\n    onHintIconHovered: Function;\r\n    onHintIconClose: Function;\r\n}) => {\r\n    return (\r\n        <div>\r\n            {\r\n                props.value ?\r\n                    <div className={classes.hintContainer}>\r\n                        <Icon\r\n                            isActive={props.isShown}\r\n                            onClose={props.onHintIconClose}\r\n                            onHover={props.onHintIconHovered}\r\n                        />\r\n                        {\r\n                            props.isShown ?\r\n                                <div className={classes.hint}>\r\n                                    {\r\n                                        props.value\r\n                                    }\r\n                                </div> :\r\n                                ''\r\n                        }\r\n                    </div>:\r\n                    ''\r\n            }\r\n        </div>\r\n    );\r\n};","import React from 'react';\r\nimport classes from './style.module.scss';\r\nimport { Field } from 'redux-form';\r\n\r\nexport default ({isActive}: {isActive?: boolean}) => {\r\n    return (\r\n        <label className={classes.switchContainer}>\r\n            <span className={isActive ? '' : classes.activeLabel }>Указать с НДФЛ</span>\r\n            <div className={classes.switch}>\r\n                <Field\r\n                    name=\"TaxSwitcher\"\r\n                    component=\"input\"\r\n                    type=\"checkbox\"\r\n                />\r\n                <span className={classes.slider}/>\r\n            </div>\r\n            <span className={isActive ? classes.activeLabel : ''}>Без НДФЛ</span>\r\n        </label>\r\n    );\r\n};","import React, { Component } from 'react';\r\nimport {formValueSelector, InjectedFormProps, reduxForm} from 'redux-form';\r\nimport {changeHint} from '../../store/actions/salary';\r\nimport Form from '../../components/Form';\r\nimport { connect } from 'react-redux';\r\nimport { formProps } from '../../interfaces/salary';\r\nimport classes from './style.module.scss';\r\n\r\nclass MyForm extends Component<formProps & InjectedFormProps<{}, formProps>> {\r\n    render() {\r\n        return (\r\n            <div className={classes.container}>\r\n                <div className={classes.sumTitle}>Сумма</div>\r\n                <Form {...this.props}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state: formProps) => {\r\n    const selector = formValueSelector('myForm');\r\n    return {\r\n        salary: state.salary,\r\n        salaryValue: + selector(state, 'salaryValue') || 0,\r\n        isSwitcherActive: selector(state, 'TaxSwitcher'),\r\n        selectedType: selector(state, 'salaryList') || 'MONTH'\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: Function) => {\r\n    return {\r\n        onHintChanged: (type?: string) => dispatch(changeHint(type))\r\n    }\r\n}\r\n\r\nconst newForm = reduxForm<{}, formProps>({\r\n    form: 'myForm'\r\n})(MyForm);\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(newForm);","import {CHANGE_HINT} from './actionTypes';\r\n\r\nexport function changeHint(hoveredHintType?: string) {\r\n    return {\r\n        type: CHANGE_HINT,\r\n        hoveredHintType\r\n    }\r\n}","export const CHANGE_HINT: string = 'CHANGE_HINT';\r\n","import {CHANGE_HINT} from '../actions/actionTypes';\nimport {salaryState} from '../../interfaces/salary';\n\nconst TYPES = [\n\t{\n\t\tkey: 'MONTH',\n\t\ttitle: 'Оклад за месяц',\n\t\tshowInput: true,\n\t\tshowTaxHint: true,\n\t\tselected: true\n\t},\n\t{\n\t\tkey: 'SMIC',\n\t\ttitle: 'МРОТ',\n\t\thideTax: true,\n\t\ttypeHint: 'МРОТ - минимальный размер оплаты труда. Разных для разных регионов'\n\t},\n\t{\n\t\tkey: 'DAY',\n\t\ttitle: 'Оплата за день',\n\t\tshowInput: true,\n\t\tinputHint: 'в день'\n\t},\n\t{\n\t\tkey: 'HOUR',\n\t\ttitle: 'Оплата за час',\n\t\tshowInput: true,\n\t\tinputHint: 'в час'\n\t},\n]\n\nconst initialState = {\n\tlist: TYPES,\n\thintShowed: false,\n\tinputValue: ''\n};\n\nexport default function salaryReducer(\n\tstate=initialState,\n\taction: {\n\t\ttype: string;\n\t\thoveredHintType?: string|null;\n\t\tinputValue?: any\n\t}\n): salaryState {\n\tswitch (action.type) {\n\t\tcase CHANGE_HINT:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thoveredHintType: action.hoveredHintType\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","import {combineReducers} from 'redux';\nimport salaryReducer from './salary';\nimport { reducer as formReducer } from 'redux-form';\n\nexport default combineReducers({\n\tsalary: salaryReducer,\n\tform: formReducer\n});","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Form from './containers/Form';\nimport {createStore} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport {Provider} from 'react-redux';\nimport rootReducer from \"./store/reducers/rootReducer\";\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools()\n);\n\nconst app = (\n    <Provider store={store}>\n        <Form />\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"switchContainer\":\"style_switchContainer__14K9M\",\"activeLabel\":\"style_activeLabel__3SW6-\",\"switch\":\"style_switch___597H\",\"slider\":\"style_slider__1fdvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hintContainer\":\"style_hintContainer__1jiZg\",\"hint\":\"style_hint__8FzQD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"style_icon__1tpXy\",\"closeIcon\":\"style_closeIcon__u1CZd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__1aTeD\",\"sumTitle\":\"style_sumTitle__2lzPE\"};"],"sourceRoot":""}